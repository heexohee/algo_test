// 첫째 줄에 정수 n이 주어진다. **(0≤n≤100)**
// n줄 만큼 ‘*’로 이루어진 삼각형을 출력한다.
// 최상단의 별은 1개이며, 모든 줄의 별의 갯수는 홀수이다.

function solution(star) {
    let answer = '';
                                            //중첩 반복문으로 가운데 정렬한 피라미드모양의 별 찍기.(입력?받은 숫자만큼 높이갈 될 것.)
    for (let i = 0; i < star; i++) {         //초기값 0~8 (입력한 star인 9 미만까지, 총 외부 반복문은 0,1,2,3,4,5,6,7,8까지 총 9번 반복할 것. 피라미드의 높이.
      for (let j = 0; j < star - i - 1; j++) { // 내부 반복문 1. 각 줄의 공백 star - i - 1은 해당 줄에 출력 할 공백의 개수.
        answer += ' ';                         // 피라미드의 맨 위에서부터 점점 줄어들며 공백의 갯수가 작아짐.
      }                                        //(예시 마지막줄 공백은 (star9)-(i8)-1=개로 공백이 없다.)
      for (let k = 0; k < (i * 2) + 1; k++) { // 내부 반복문 2. 아래로 내려갈수록 별의 개수가 증가, 별은 아래로 갈수록 "i값의 2배+1만큼 증가"함.
        answer += '*';
      }
      
      answer += '\n';                              //외부 반복문안의 내부 반복문까지 실행되면 /n이 대입되어 줄바꿈까지.
    }
    
    console.log(answer);
  }
  let star = 9;
solution(star); //함수 호출.
